# GitHub Repository Secrets Template
# Copy this file and configure your repository secrets at:
# https://github.com/YOUR_USERNAME/ZetaWatch/settings/secrets/actions

# =============================================================================
# CODE SIGNING CERTIFICATES (Optional but recommended for releases)
# =============================================================================

# To generate these values:
# 1. Export your Developer ID Application certificate from Keychain Access
#    - Select certificate + private key, export as .p12
#    - Use empty password for export
# 2. Encode the .p12 file: base64 -i certificate.p12 | pbcopy
# 3. Paste the result as the secret value

# Developer ID Application Certificate (for app signing)
DEVELOPER_ID_APPLICATION_CERTIFICATE=<base64-encoded-p12-file>
DEVELOPER_ID_APPLICATION_PRIVATE_KEY=<base64-encoded-private-key-p12>

# Developer ID Installer Certificate (optional, for pkg installers)
DEVELOPER_ID_INSTALLER_CERTIFICATE=<base64-encoded-installer-p12>
DEVELOPER_ID_INSTALLER_PRIVATE_KEY=<base64-encoded-installer-key-p12>

# Temporary keychain password (used during CI build)
KEYCHAIN_PASSWORD=<random-secure-password>

# =============================================================================
# NOTARIZATION (Optional but recommended for releases)
# =============================================================================

# Apple ID used for notarization
NOTARIZATION_USERNAME=<your-apple-id-email>

# App-specific password (NOT your regular Apple ID password)
# Generate at: https://appleid.apple.com/account/manage -> App-Specific Passwords
NOTARIZATION_PASSWORD=<app-specific-password>

# Your Apple Developer Team ID
# Find at: https://developer.apple.com/account/#/membership
NOTARIZATION_TEAM_ID=<10-character-team-id>

# =============================================================================
# EXAMPLE VALUES (DO NOT USE THESE)
# =============================================================================

# Example of what the values look like (DO NOT COPY THESE):
# DEVELOPER_ID_APPLICATION_CERTIFICATE=MIIKCgIBAzCCCcYGCSqGSIb3DQEHAaCCCbcEggmzMIIJrzCCBBcGCSqGSIb3DQEHBqCCBAgwggQEAgEAMIID...
# NOTARIZATION_USERNAME=developer@example.com  
# NOTARIZATION_PASSWORD=abcd-efgh-ijkl-mnop
# NOTARIZATION_TEAM_ID=ABCDEFGHIJ
# KEYCHAIN_PASSWORD=secure-random-password-123

# =============================================================================
# CERTIFICATE GENERATION COMMANDS
# =============================================================================

# If you need to create certificates:

# 1. Create Certificate Signing Request (CSR):
#    - Open Keychain Access
#    - Keychain Access > Certificate Assistant > Request a Certificate from a Certificate Authority
#    - Save to disk

# 2. Create Developer ID Application Certificate:
#    - Go to https://developer.apple.com/account/resources/certificates/list
#    - Click "+" to create new certificate
#    - Select "Developer ID Application"
#    - Upload your CSR file
#    - Download the certificate

# 3. Install certificate in Keychain and export:
#    - Double-click downloaded certificate to install
#    - In Keychain Access, find the certificate
#    - Select both certificate and private key
#    - Right-click > Export 2 items
#    - Choose .p12 format, use empty password
#    - Encode: base64 -i exported.p12 | pbcopy

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. NEVER commit this file with real values to git
# 2. Use strong, unique passwords for keychain
# 3. Generate app-specific passwords, don't use your main Apple ID password
# 4. Rotate secrets regularly
# 5. Only give repository access to trusted collaborators
# 6. Consider using environment-specific secrets for staging vs production

# =============================================================================
# TESTING WITHOUT SECRETS
# =============================================================================

# The workflows will work without these secrets, but:
# - Apps will not be code signed
# - Apps will not be notarized  
# - Users will see Gatekeeper warnings when running the app
# - For development/testing, this is usually fine
# - For production releases, code signing is strongly recommended
